from typing import Protocol, TYPE_CHECKING

if TYPE_CHECKING:
    from led_manager import LedManager
    from btn_manager import ButtonManager
    from player import Player
    from recorder import Recorder
# Just for typehint & pylance (highlighting)
# mathing all function calls & params of CmdRegistry defined in Main
class CmdTyping(Protocol):

    led: "LedManager"
    button: "ButtonManager"
    player: "Player"
    recorder: "Recorder"

    # def button_await_confirm(self) -> None: ...

    # def get_current_recording(self) -> str: ...
    # def reset_recordings(self) -> None: ...
    # def start_recording(self) -> None: ...

    # def stop_recording(self) -> None: ...
    # def stop_player(self) -> None: ...
    # def stop_confirmation_loop(self) -> None: ...
    # def play_sound(self, filename) -> None: ...
    # def get_rec_buffer(self) -> list: ...
    # def delete_recording(self) -> None: ...
    # def terminate_current_playback(self) -> None: ...
    # def pause_player(self) -> None: ...
    # def resume_player(self) -> None: ...
    # def skip_player(self) -> None: ...
    # def extend_buffer(self) -> None: ...
    # def playback_hold_confirm(self) -> None: ...
    # def start_confirmation(self) -> threading.Thread: ...

    # def recording_led_on(self) -> None: ...
    # def replay_led_on(self) -> None: ...
    # def instruction_led_on(self) -> None: ...
    # def led_off(self) -> None: ...
    